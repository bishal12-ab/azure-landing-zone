name: "infra_pipeline"
on: workflow_dispatch
jobs:
  terraform-job-init-plan:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
    - name: Checkout
      uses: actions/checkout@v5.0.0
    - name: Install Terraform
      uses: little-core-labs/install-terraform@v2.0.0
      with:
       version: 1.13.0
    - name: Azure Login
      uses: Azure/login@v2.3.0
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    # - name: Set Azure Credentials as Environment Variables
    #   run: echo "Azure Credentials Loaded"
    #   env:
    #     ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
    #     ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
    #     ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
    #     ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
         
    
    - name: Terraform init
      run: terraform init
      working-directory: enviroments/dev
    - name: Terraform fmt
      run: terraform fmt
      working-directory: enviroments/dev
    - name: Terraform plan
      run: terraform plan
      working-directory: enviroments/dev
    # - name: Terraform Apply
    #   run: terraform apply -auto-approve
    #   working-directory: enviroments/dev

  terraform-init-apply:
    runs-on:  ubuntu-latest
    needs: terraform-job-init-plan
    # environment:
    #   name: Production  
    permissions:
      id-token: write
      contents: read
    steps:
    - name: Checkout
      uses: actions/checkout@v5.0.0
    - name: Install Terraform
      uses: little-core-labs/install-terraform@v2.0.0
      with:
        version: 1.13.0
    - name: Azure Login
      uses: Azure/login@v2.3.0
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - name: Terraform init
      run: terraform init
      working-directory: enviroments/dev
    - name: Terraform plan
      run: terraform plan
      working-directory: enviroments/dev
    - name: Terraform apply
      run: terraform apply -auto-approve tfplan
      working-directory: enviroments/dev
    - name: Terraform destroy
      run: terraform destroy -auto-approve
      working-directory: enviroments/dev
      
    
          
    
    
          


    
